map-routing-project/
├── .venv/                   # Thư mục môi trường ảo của Python
├── backend/                 # Nơi chứa toàn bộ code FastAPI (Server-side)
│   ├── app/                 # Thư mục chính của ứng dụng
│   │   ├── __init__.py
│   │   ├── api/             # Chứa các API endpoints (routers)
│   │   │   ├── __init__.py
│   │   │   └── v1/
│   │   │       ├── __init__.py
│   │   │       ├── endpoints/
│   │   │       │   ├── __init__.py
│   │   │       │   ├── routing.py     # API tìm đường, xử lý vùng cấm
│   │   │       │   └── geodata.py     # API lấy geometry của đường, vùng...
│   │   │       └── router.py      # Gộp các endpoints lại
│   │   │
│   │   ├── core/            # Cấu hình và các logic cốt lõi
│   │   │   ├── __init__.py
│   │   │   └── config.py      # Chứa các biến môi trường, chuỗi kết nối DB
│   │   │
│   │   ├── crud/            # Logic tương tác trực tiếp với Database (Create, Read, Update, Delete)
│   │   │   ├── __init__.py
│   │   │   └── crud_map.py    # Các hàm truy vấn PostGIS: lấy subgraph, tìm cạnh gần nhất...
│   │   │
│   │   ├── models/          # (Tùy chọn) ORM models nếu dùng (ví dụ: SQLAlchemy)
│   │   │
│   │   ├── schemas/         # Mô hình dữ liệu Pydantic để validate API request/response
│   │   │   ├── __init__.py
│   │   │   ├── route.py       # Schema cho yêu cầu tìm đường (start, end, forbidden_polygon)
│   │   │   └── geo.py         # Schema cho GeoJSON
│   │   │
│   │   └── services/          # Nơi chứa business logic chính
│   │       ├── __init__.py
│   │       ├── routing_service.py # Logic chính: tải đồ thị, áp dụng vùng cấm, chạy A*
│   │       └── geocoding_service.py # Logic xử lý clip đường, tìm geometry...
│   │
│   └── main.py              # File khởi chạy ứng dụng FastAPI
│
├── database/                # Chứa các scripts liên quan đến database
│   ├── migrations/          # (Nếu dùng Alembic) Chứa các file migration
│   └── seed/                # Dữ liệu mẫu hoặc scripts tạo bảng ban đầu
│       └── create_tables.sql
│
├── frontend/                # Nơi chứa toàn bộ code Streamlit (Client-side)
│   ├── assets/              # Chứa ảnh, logo, file CSS tùy chỉnh
│   ├── components/          # Các thành phần UI có thể tái sử dụng (ví dụ: bản đồ)
│   │   └── map_component.py
│   ├── pages/               # Mỗi file là một trang trên ứng dụng Streamlit
│   │   ├── 1_📍_Tìm_đường.py
│   │   └── 2_⛔️_Quản_lý_vùng_cấm.py
│   ├── services/            # Các hàm gọi API từ frontend
│   │   └── api_client.py
│   └── Home.py              # Trang chủ của ứng dụng Streamlit
│
├── scripts/                 # Các scripts tiện ích (ví dụ: nạp dữ liệu)
│   └── load_osm_data.sh     # Script bash để chạy osm2pgsql
│
├── .gitignore               # Các file và thư mục mà Git sẽ bỏ qua
├── README.md                # Hướng dẫn cài đặt và sử dụng dự án
└── requirements.txt         # Các thư viện Python cần thiết cho cả backend và frontend